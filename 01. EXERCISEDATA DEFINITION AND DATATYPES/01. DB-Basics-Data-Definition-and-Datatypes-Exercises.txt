------------------------------------------------------------
Problem 1.	Create Database
------------------------------------------------------------

CREATE DATABASE Minions

USE Minions

------------------------------------------------------------
Problem 2.	Create Tables
------------------------------------------------------------

CREATE TABLE Minions(
Id INT PRIMARY KEY IDENTITY,
[Name] NVARCHAR(20) NOT NULL,
Age INT
)

CREATE TABLE Towns(
Id INT PRIMARY KEY IDENTITY,
[Name] NVARCHAR(20) NOT NULL,
)

------------------------------------------------------------
Problem 3.	Alter Minions Table
------------------------------------------------------------

ALTER TABLE Minions
ADD TownId INT FOREIGN KEY REFERENCES Towns(Id)

SET IDENTITY_INSERT Towns On

------------------------------------------------------------
Problem 4.	Insert Records in Both Tables
------------------------------------------------------------

INSERT INTO Towns(Id, [Name])
VALUES (1, 'Sofia'),
(2, 'Plovdiv'),
(3, 'Varna')

SET IDENTITY_INSERT Towns Off

SET IDENTITY_INSERT Minions On

INSERT INTO Minions(Id, [Name], Age, TownId)
VALUES (1, 'kEVIN', 22, 1),
(2, 'Bob', 15, 3),
(3, 'Steward', NULL, 2)

UPDATE Minions 
SET 
    [Name] = 'Kevin'
WHERE
    Id = 1;

------------------------------------------------------------
Problem 5.	Truncate Table Minions
------------------------------------------------------------

TRUNCATE TABLE Minions

------------------------------------------------------------
Problem 6.	Drop All Tables
------------------------------------------------------------

DROP TABLE Towns

DROP TABLE Minions

------------------------------------------------------------
Problem 7.	Create Table People
------------------------------------------------------------

CREATE TABLE People(
Id INT PRIMARY KEY IDENTITY,
[Name] NVARCHAR(200) NOT NULL,
Picture VARBINARY(2000) NULL,
Height FLOAT(2),
[Weight] FLOAT(2),
Gender CHAR NOT NULL CHECK (Gender = 'm' OR Gender = 'f'),
Birthdate DATETIME NOT NULL,
Biography NVARCHAR(MAX)
)

INSERT INTO People
VALUES ('Aaa', NULL, 1.70, 55, 'f', 2000-11-08, 'aaa'),
('Bbb', NULL, 1.75, 65, 'm', 2001-11-08, 'bbb'),
('Ccc', NULL, 1.80, 85, 'f', 2002-11-08, 'ccc'),
('Ddd', NULL, 1.70, 75, 'f', 2003-11-08, 'ddd'),
('Eee', NULL, 1.78, 55, 'f', 2008-11-08, 'eee' )


------------------------------------------------------------
Problem 8.	Create Table Users
------------------------------------------------------------

CREATE TABLE Users
(
Id INT PRIMARY KEY IDENTITY,
Username VARCHAR(30) UNIQUE NOT NULL,
[Password] VARCHAR(26) NOT NULL,
ProfilePicture VARBINARY(900),
LastLoginTime DATETIME,
IsDeleted BIT
)

INSERT INTO Users
VALUES ('AAA', 'aaaaaaaa', NULL, 2001-11-08, 0),
('BBB', 'bbbbbbbb', NULL, 2001-11-08, 0),
('CCC', 'cccccccc', NULL, 2002-11-08, 1),
('DDD', 'ddddddd', NULL, 2003-11-08, 1),
('EEE', 'eeeeeee', NULL, 2004-11-08, 0)

------------------------------------------------------------
Problem 9.	Change Primary Key
------------------------------------------------------------
ALTER TABLE Users  
DROP CONSTRAINT PK_Users

ALTER TABLE Users
ADD CONSTRAINT PK_Users 
PRIMARY KEY(Id, Username)

------------------------------------------------------------
Problem 10.	Add Check Constraint
------------------------------------------------------------

ALTER TABLE Users
ADD CONSTRAINT Password CHECK(LEN(Password) >= 5)

------------------------------------------------------------
Problem 11.	Set Default Value of a Field
------------------------------------------------------------

ALTER TABLE Users
ADD CONSTRAINT DF_LastLoginTime
DEFAULT GETDATE() FOR LastLoginTime

------------------------------------------------------------
Problem 12.	Set Unique Field
------------------------------------------------------------

ALTER TABLE Users
DROP CONSTRAINT PK_Users

ALTER TABLE Users
ADD CONSTRAINT PK_Users PRIMARY KEY(Id)

ALTER TABLE Users
ADD CONSTRAINT UC_Users UNIQUE(Username);

ALTER TABLE Users
ADD CONSTRAINT CHK_Users CHECK(LEN(Password) >= 3)

------------------------------------------------------------
Problem 13.	Movies Database
------------------------------------------------------------
CREATE DATABASE Movies

CREATE TABLE Directors(
Id INT PRIMARY KEY IDENTITY,
DirectorName VARCHAR(30) NOT NULL,
Notes NVARCHAR(200)
)

CREATE TABLE Genres(
Id INT PRIMARY KEY IDENTITY,
GenreName VARCHAR(30) NOT NULL,
Notes NVARCHAR(200)
)

CREATE TABLE Categories(
Id INT PRIMARY KEY IDENTITY,
CategoryName VARCHAR(30) NOT NULL,
Notes NVARCHAR(200)
)

CREATE TABLE Movies(
Id INT PRIMARY KEY IDENTITY,
Title VARCHAR(30) NOT NULL,
DirectorId INT FOREIGN KEY REFERENCES Directors(Id),
CopyrightYear INT,
[Length] VARCHAR(30),
GenreId INT FOREIGN KEY REFERENCES Genres(Id),
CategoryId INT FOREIGN KEY REFERENCES Categories(Id),
Rating INT,
Notes VARCHAR(200)
)


INSERT INTO Directors
VALUES ('DIR1', 'AAAAAAA'),
('DIR2', 'BBBBBB'),
('DIR3', NULL),
('DIR4', 'CCCCCC'),
('DIR5', NULL)


INSERT INTO Genres
VALUES ('Horror', 'AAAAAAA'),
('Historical', 'BBBBBB'),
('Drama', NULL),
('Crime', 'CCCCCC'),
('Comedy', NULL)

INSERT INTO Categories
VALUES ('CATEGORY1', 'AAAAAAA'),
('CATEGORY2', 'BBBBBB'),
('CATEGORY3', NULL),
('CATEGORY4', 'CCCCCC'),
('CATEGORY5', NULL)

INSERT INTO Movies(Title,
                   DirectorId,
                   GenreId,
                   CategoryId)
VALUES('TITLE ONE', 2, 3, 5),
('TITLE TWO', 1, 4, 3),
('TITLE THREE', 2, 5, 5),
('TITLE FOUR', 5, 1, 1),
('TITLE FIVE', 2, 3, 5)

------------------------------------------------------------
Problem 14.	Car Rental Database
------------------------------------------------------------

CREATE DATABASE CarRental

CREATE TABLE Categories(
Id INT PRIMARY KEY IDENTITY,
CategoryName VARCHAR(30) NOT NULL,
DailyRate INT,
WeeklyRate INT,
MonthlyRate INT,
WeekendRate INT
)

INSERT INTO Categories(CategoryName)
VALUES('Category Name 1'),
('Category Name 2'),
('Category Name 3')

CREATE TABLE Cars(
Id INT PRIMARY KEY IDENTITY,
PlateNumber VARCHAR(20) NOT NULL,
Manufacturer VARCHAR(30) NOT NULL,
Model VARCHAR(30) NOT NULL,
CarYear INT NOT NULL,
CategoryId INT FOREIGN KEY REFERENCES Categories(Id),
Doors INT NOT NULL,
Picture VARBINARY(2000),
Condition VARCHAR(30),
Available BIT DEFAULT 1
)

INSERT INTO Cars(PlateNumber, Manufacturer, Model, CarYear,CategoryId, Doors)
VALUES('NUMBER1','BMW', 'X5', 2015, 1, 5),
('NUMBER2','HONDA', 'AAA', 2014, 2, 4),
('NUMBER3','OPEL', 'CORSA', 2010, 3, 5)

CREATE TABLE Employees(
Id INT PRIMARY KEY IDENTITY,
FirstName VARCHAR(30) NOT NULL,
LastName VARCHAR(30) NOT NULL,
Title VARCHAR(30),
Notes VARCHAR(200)
)

INSERT INTO Employees(FirstName, LastName)
VALUES('IVAN', 'IVANOV'),
('PETAR', 'PETROV'),
('DIMITAR', 'DIMITROV')

CREATE TABLE Customers(
Id INT PRIMARY KEY IDENTITY,
DriverLicenceNumber VARCHAR(30) UNIQUE NOT NULL,
FullName VARCHAR(50),
Address VARCHAR(100),
City VARCHAR(30),
ZIPCode INT,
Notes VARCHAR(MAX)
)

INSERT INTO Customers(DriverLicenceNumber, FullName)
VALUES('AAAAAA', 'IVAN IVANOV'),
('BBBBBBB', 'BORIS PETROV'),
('CCCCCCC', 'PETAR PETROV')

CREATE TABLE RentalOrders(
Id INT PRIMARY KEY IDENTITY,
EmployeeId INT FOREIGN KEY REFERENCES Employees(Id),
CustomerId INT FOREIGN KEY REFERENCES Customers(Id),
CarId INT FOREIGN KEY REFERENCES Cars(Id),
TankLevel INT,
KilometrageStart INT,
KilometrageEnd INT, 
TotalKilometrage INT, 
StartDate DATE NOT NULL, 
EndDate DATE NOT NULL, 
TotalDays INT, 
RateApplied DECIMAL(5, 2),
TaxRate DECIMAL(5, 2), 
OrderStatus VARCHAR(30),
Notes VARCHAR(MAX)
)

INSERT INTO RentalOrders(EmployeeId, CustomerId, CarId, StartDate, EndDate)
VALUES(1, 3, 2, '2019-01-01', '2019-01-10'),
(3, 2, 1, '2018-09-12', '2018-09-20'),
(2, 1, 2, '2018-08-12', '2018-08-20')

------------------------------------------------------------
Problem 15.	Hotel Database
------------------------------------------------------------

CREATE DATABASE Hotel

CREATE TABLE Employees(
Id INT PRIMARY KEY IDENTITY,
FirstName VARCHAR(30) NOT NULL,
LastName VARCHAR(30) NOT NULL,
Title VARCHAR(30),
Notes VARCHAR(200)
)

INSERT INTO Employees(FirstName, LastName)
VALUES('IVAN', 'IVANOV'),
('PETAR', 'PETROV'),
('DIMITAR', 'DIMITROV')

CREATE TABLE Customers(
Id INT PRIMARY KEY IDENTITY,
AccountNumber BIGINT, 
FirstName VARCHAR(30), 
LastName VARCHAR(30), 
PhoneNumber VARCHAR(30), 
EmergencyName VARCHAR(100), 
EmergencyNumber VARCHAR(20), 
Notes VARCHAR(MAX)
)

INSERT INTO Customers(FirstName, LastName)
VALUES('Ivan', 'Ivanov'),
('Petar', 'Petrov'),
('Dimitar', 'Dimitrov')



CREATE TABLE RoomStatus(
Id INT PRIMARY KEY IDENTITY,
RoomStatus BIT, 
Notes VARCHAR(MAX)
)

INSERT INTO RoomStatus
VALUES(0, 'AAAA'),
(1, 'BBBB'),
(0, 'CCCCC')



CREATE TABLE RoomTypes(
RoomType VARCHAR(50) PRIMARY KEY,
Notes VARCHAR(MAX)
)

INSERT INTO RoomTypes(RoomType)
VALUES ('Double room'),
('Single room'),
('Apartment')

CREATE TABLE BedTypes(
BedType VARCHAR(30) PRIMARY KEY, 
Notes VARCHAR(MAX)
)

INSERT INTO BedTypes(BedType)
VALUES('Single'),
('Double'),
('King size')


CREATE TABLE Rooms(
RoomNumber INT PRIMARY KEY IDENTITY, 
RoomType VARCHAR(50) FOREIGN KEY REFERENCES RoomTypes(RoomType), 
BedType VARCHAR(30) FOREIGN KEY REFERENCES BedTypes(BedType), 
Rate INT, 
RoomStatus INT FOREIGN KEY REFERENCES RoomStatus(Id), 
Notes VARCHAR(MAX)
)

INSERT INTO Rooms(RoomType, BedType, RoomStatus)
VALUES('Double room', 'Double', 2),
('Single room', 'Single', 1),
('Apartment', 'King size', 3)

CREATE TABLE Payments(
Id INT PRIMARY KEY IDENTITY, 
EmployeeId INT FOREIGN KEY REFERENCES Employees(Id), 
PaymentDate DATE NOT NULL, 
AccountNumber VARCHAR(50), 
FirstDateOccupied DATE, 
LastDateOccupied DATE, 
TotalDays INT, 
AmountCharged BIT, 
TaxRate INT, 
TaxAmount DECIMAL, 
PaymentTotal DECIMAL(5,2) NOT NULL, 
Notes VARCHAR(MAX)
)

INSERT INTO Payments(EmployeeId, PaymentDate, PaymentTotal)
VALUES(1, '2001-11-08', 100.50),
(2, '2001-11-08', 140.80 ),
(3,'2001-11-08', 800.50)

CREATE TABLE Occupancies(
Id INT PRIMARY KEY IDENTITY, 
EmployeeId INT FOREIGN KEY REFERENCES Employees(Id), 
DateOccupied DATE, 
AccountNumber VARCHAR(50), 
RoomNumber INT FOREIGN KEY REFERENCES Rooms(RoomNumber), 
RateApplied BIT, 
PhoneCharge INT, 
Notes VARCHAR(MAX)
)

INSERT INTO Occupancies(EmployeeId, RoomNumber)
VALUES(3, 1),
(1, 2),
(2, 3)

------------------------------------------------------------
Problem 16.	Create SoftUni Database
------------------------------------------------------------

CREATE TABLE Employees(
Id INT PRIMARY KEY IDENTITY, 
FirstName VARCHAR(50), 
MiddleName VARCHAR(50), 
LastName VARCHAR(50), 
JobTitle VARCHAR(50), 
DepartmentId INT FOREIGN KEY REFERENCES Departments(Id), 
HireDate DATETIME, 
Salary DECIMAL(15,2), 
AddressId INT FOREIGN KEY REFERENCES Addresses(Id)
)

------------------------------------------------------------
Problem 17.	Backup Database
------------------------------------------------------------

------------------------------------------------------------
Problem 18.	Basic Insert
------------------------------------------------------------

INSERT INTO Towns(Name)
VALUES('Sofia'),
('Plovdiv'),
('Varna'),
('Burgas')

--Engineering, Sales, Marketing, Software Development, Quality Assurance

INSERT INTO Departments(Name)
VALUES('Engineering'),
('Sales'),
('Marketing'),
('Software Development'),
('Quality Assurance')

INSERT INTO Employees(FirstName, JobTitle, DepartmentId, HireDate, Salary)
VALUES('Ivan Ivanov Ivanov', '.NET Developer',	4,	01/02/2013, 3500.00),
('Petar Petrov Petrov',	'Senior Engineer', 1, 02/03/2004, 4000.00),
('Maria Petrova Ivanova', 'Intern',	5, 28/08/2016, 525.25),
('Georgi Teziev Ivanov', 'CEO',	2, 09/12/2007, 3000.00),
('Peter Pan Pan', 'Intern',	3, 28/08/2016, 599.88)

------------------------------------------------------------
Problem 19.	Basic Select All Fields
------------------------------------------------------------

SELECT * FROM Towns

SELECT * FROM Departments

SELECT * FROM Employees

------------------------------------------------------------
Problem 20.	Basic Select All Fields and Order Them
------------------------------------------------------------

SELECT * FROM Towns
ORDER BY Name ASC

SELECT * FROM Departments
ORDER BY Name ASC

SELECT * FROM Employees
ORDER BY Salary DESC

------------------------------------------------------------
Problem 21.	Basic Select Some Fields
------------------------------------------------------------

SELECT Name FROM Towns
ORDER BY Name ASC

SELECT Name FROM Departments
ORDER BY Name ASC

SELECT FirstName, LastName, JobTitle, Salary FROM Employees
ORDER BY Salary DESC

------------------------------------------------------------
Problem 22.	Increase Employees Salary
------------------------------------------------------------

UPDATE Employees
SET Salary = Salary*1.1

SELECT Salary FROM Employees

------------------------------------------------------------
Problem 23.	Decrease Tax Rate
------------------------------------------------------------

UPDATE Payments 
SET TaxRate = TaxRate*0.97

SELECT TaxRate FROM Payments

------------------------------------------------------------
Problem 24.	Delete All Records
------------------------------------------------------------

TRUNCATE TABLE Occupancies