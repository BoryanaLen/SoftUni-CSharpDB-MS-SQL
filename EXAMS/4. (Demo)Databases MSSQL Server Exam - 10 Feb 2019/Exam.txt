---------------------------------------------------------------------------------
Section 1. DDL (30 pts)
---------------------------------------------------------------------------------

CREATE TABLE Planets(
Id INT PRIMARY KEY IDENTITY,
[Name] VARCHAR(30) NOT NULL
)

CREATE TABLE Spaceports(
Id INT PRIMARY KEY IDENTITY,
[Name] VARCHAR(50) NOT NULL,
PlanetId INT FOREIGN KEY REFERENCES Planets(Id) NOT NULL
)

CREATE TABLE Spaceships(
Id INT PRIMARY KEY IDENTITY,
[Name] VARCHAR(50) NOT NULL,
Manufacturer VARCHAR(30) NOT NULL,
LightSpeedRate INT DEFAULT 0
)

CREATE TABLE Colonists(
Id INT PRIMARY KEY IDENTITY,
FirstName VARCHAR(20) NOT NULL,
LastName VARCHAR(20) NOT NULL,
Ucn VARCHAR(10) UNIQUE NOT NULL,
BirthDate DATE NOT NULL
)

CREATE TABLE Journeys(
Id INT PRIMARY KEY IDENTITY,
JourneyStart DATETIME NOT NULL,
JourneyEnd DATETIME NOT NULL,
Purpose  VARCHAR(11) CHECK (Purpose IN ('Medical', 'Technical', 'Educational', 'Military')),
DestinationSpaceportId INT FOREIGN KEY REFERENCES Spaceports(Id) NOT NULL,
SpaceshipId INT FOREIGN KEY REFERENCES Spaceships(Id) NOT NULL,
)

CREATE TABLE TravelCards(
Id INT PRIMARY KEY IDENTITY,
CardNumber CHAR(10) UNIQUE NOT NULL,
JobDuringJourney VARCHAR(8) CHECK(JobDuringJourney IN ('Pilot', 'Engineer', 'Trooper', 'Cleaner', 'Cook')),
ColonistId INT FOREIGN KEY REFERENCES Colonists(Id) NOT NULL,
JourneyId INT FOREIGN KEY REFERENCES Journeys(Id) NOT NULL
)

---------------------------------------------------------------------------------
02. Insert
---------------------------------------------------------------------------------

INSERT INTO Planets
VALUES('Mars'),
('Earth'),
('Jupiter'),
('Saturn')

INSERT INTO Spaceships
VALUES('Golf', 'VW', 3),
('WakaWaka', 'Wakanda',	4),
('Falcon9', 'SpaceX', 1),
('Bed',	'Vidolov', 6)

---------------------------------------------------------------------------------
03. Update
---------------------------------------------------------------------------------

UPDATE Spaceships
SET LightSpeedRate += 1
WHERE Id BETWEEN 8 AND 12

---------------------------------------------------------------------------------
04. Delete
---------------------------------------------------------------------------------

DELETE FROM TravelCards
WHERE JourneyId BETWEEN 1 AND 3

DELETE FROM Journeys
WHERE Id BETWEEN 1 AND 3

---------------------------------------------------------------------------------
05. Select All Travel Cards
---------------------------------------------------------------------------------

SELECT CardNumber, JobDuringJourney FROM TravelCards
ORDER BY CardNumber

---------------------------------------------------------------------------------
06. Select All Colonists
---------------------------------------------------------------------------------

SELECT 
Id,
FirstName + ' ' + LastName AS FullName,
Ucn
FROM Colonists
ORDER BY FirstName, LastName, Id

---------------------------------------------------------------------------------
07. Select All Military Journeys
---------------------------------------------------------------------------------

SELECT 
Id,
FORMAT (JourneyStart, 'dd/MM/yyyy') AS JourneyStart,
FORMAT (JourneyEnd, 'dd/MM/yyyy') AS JourneyEnd
FROM Journeys
WHERE Purpose = 'Military'
ORDER BY JourneyStart

---------------------------------------------------------------------------------
08. Select All Pilots
---------------------------------------------------------------------------------

SELECT c.Id,
c.FirstName + ' ' + c.LastName AS full_name
FROM Colonists c
JOIN TravelCards AS tc ON tc.ColonistId = c.Id
WHERE JobDuringJourney = 'Pilot'
ORDER BY c.Id

---------------------------------------------------------------------------------
09. Count Colonists
---------------------------------------------------------------------------------

SELECT COUNT(*)
FROM Colonists c
JOIN TravelCards AS tc ON tc.ColonistId = c.Id
JOIN Journeys AS j ON j.Id = tc.JourneyId
WHERE Purpose = 'Technical'

---------------------------------------------------------------------------------
10. Select The Fastest Spaceship
---------------------------------------------------------------------------------

SELECT TOP 1
s.Name AS SpaceshipName,
sp.Name  AS SpaceportName
FROM Spaceships s
JOIN Journeys AS j ON j.SpaceshipId = s.Id
JOIN Spaceports AS sp ON sp.Id = j.DestinationSpaceportId
ORDER BY LightSpeedRate DESC


---------------------------------------------------------------------------------
11. Select Spaceships With Pilots
---------------------------------------------------------------------------------

SELECT 
sc.Name,
sc.Manufacturer
FROM (SELECT tc.JourneyId,
		tc.ColonistId,
		DATEDIFF(year, BirthDate, '2019-01-01') AS Years
		FROM TravelCards tc
		JOIN Colonists AS c ON c.Id = tc.ColonistId
		WHERE JobDuringJourney = 'Pilot') t
JOIN Journeys AS j ON j.Id = t.JourneyId
JOIN Spaceships AS sc ON j.SpaceshipId = sc.Id
WHERE t.Years < 30
ORDER BY sc.Name

---------------------------------------------------------------------------------
12. Select All Educational Mission
---------------------------------------------------------------------------------

SELECT 
p.Name AS PlanetName,
sp.Name AS SpaceportName
FROM Planets p
JOIN Spaceports AS sp ON sp.PlanetId = p.Id
JOIN (SELECT * FROM Journeys j
		WHERE Purpose = 'Educational') AS t ON T.DestinationSpaceportId = sp.Id
ORDER BY SpaceportName DESC

---------------------------------------------------------------------------------
13. Planets And Journeys
---------------------------------------------------------------------------------

SELECT 
p.Name AS PlanetName,
t.JourneysCount AS JourneysCount
FROM Planets p
JOIN (SELECT 
		COUNT(*) AS JourneysCount,
		p.Id
		FROM Journeys j
		JOIN Spaceports AS sp ON sp.Id = j.DestinationSpaceportId
		JOIN Planets AS p ON p.Id = sp.PlanetId
		GROUP BY p.Id) AS t ON t.Id = p.Id
ORDER BY JourneysCount DESC, PlanetName


---------------------------------------------------------------------------------
14. Extract The Shortest Journey
---------------------------------------------------------------------------------

SELECT TOP 1
t.Id,
p.Name AS PlanetName,
sp.Name AS SpaceportName,
t.Purpose AS JourneyPurpose
FROM (SELECT j.Id,
		J.Purpose,	
		J.DestinationSpaceportId,
		DATEDIFF(Second, j.JourneyStart, j.JourneyEnd) AS MinJourney
		FROM Journeys j) t
JOIN Spaceports AS sp ON sp.Id = t.DestinationSpaceportId
JOIN Planets AS p ON p.Id = sp.PlanetId
ORDER BY t.MinJourney

---------------------------------------------------------------------------------
15. Select The Less Popular Job
---------------------------------------------------------------------------------

SELECT TOP 1
t.Id AS JourneyId,
c.JobDuringJourney AS JobName
FROM (SELECT j.Id,
		J.Purpose,	
		J.DestinationSpaceportId,
		DATEDIFF(Second, j.JourneyStart, j.JourneyEnd) AS MinJourney
		FROM Journeys j) t
JOIN (SELECT JourneyId,
		JobDuringJourney, 
		COUNT(*) AS [Count]
		FROM TravelCards
		GROUP BY JourneyId,
		JobDuringJourney) AS c ON c.JourneyId = t.Id
ORDER BY t.MinJourney DESC, c.Count 

---------------------------------------------------------------------------------
16. Select Special Colonists
---------------------------------------------------------------------------------

SELECT * 
FROM (SELECT 
		tc.JobDuringJourney AS JobDuringJourney,
		CONCAT(c.FirstName, ' ', c.LastName) AS FullName,
		DENSE_RANK() OVER (PARTITION BY tc.JobDuringJourney ORDER BY c.BirthDate) AS JobRank  
		FROM TravelCards tc
		JOIN Journeys AS j ON j.Id = tc.JourneyId
		JOIN Colonists AS c ON c.Id = tc.ColonistId) t
WHERE t.JobRank = 2

---------------------------------------------------------------------------------
17. Planets and Spaceports
---------------------------------------------------------------------------------

SELECT 
pl.Name,
ISNULL(T.Count, 0) AS [Count]
FROM Planets pl
LEFT JOIN (SELECT p.Id AS PlanetId,
			COUNT(*) AS [Count]
			FROM Planets p
			JOIN Spaceports AS sp ON sp.PlanetId = p.Id
			GROUP BY p.Id) AS t ON t.PlanetId = pl.Id
ORDER BY Count DESC, Name


---------------------------------------------------------------------------------
18. Get Colonists Count
---------------------------------------------------------------------------------

CREATE FUNCTION udf_GetColonistsCount(@PlanetName VARCHAR(30))
RETURNS INT
BEGIN
	DECLARE @count INT
	SET @count = (SELECT
				COUNT(*) AS [Count]
				FROM TravelCards tc
				JOIN Journeys AS j ON j.Id = tc.JourneyId
				JOIN Spaceports AS sp ON sp.Id = j.DestinationSpaceportId
				JOIN Planets AS p ON p.Id = sp.PlanetId
				GROUP BY p.Name
				HAVING P.Name = @PlanetName)
     RETURN ISNULL(@count, 0)
END

---------------------------------------------------------------------------------
19. Change Journey Purpose
---------------------------------------------------------------------------------


CREATE PROC usp_ChangeJourneyPurpose(@JourneyId INT, @NewPurpose VARCHAR(20))
AS
BEGIN
IF(@JourneyId NOT IN (SELECT Id FROM Journeys))
	BEGIN
		RAISERROR('The journey does not exist!', 16, 1)
	END

DECLARE @oldPurpose VARCHAR(30)
SET @oldPurpose = (SELECT Purpose FROM Journeys
					WHERE Id = @JourneyId)

IF(@oldPurpose =  @NewPurpose)
	BEGIN
		RAISERROR('You cannot change the purpose!', 16, 1)
	END

	UPDATE Journeys
	SET Purpose =  @NewPurpose
	WHERE Id = @JourneyId
END

---------------------------------------------------------------------------------
20. Deleted Journeys
---------------------------------------------------------------------------------

CREATE TRIGGER tr_AfterDeleteJourney
ON Journeys AFTER DELETE
AS
BEGIN
	INSERT INTO DeletedJourneys
	SELECT deleted.Id, deleted.JourneyStart, deleted.JourneyEnd,
	deleted.Purpose, deleted.DestinationSpaceportId, deleted.SpaceshipId FROM deleted
END






