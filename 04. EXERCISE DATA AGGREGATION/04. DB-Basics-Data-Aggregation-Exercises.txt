-------------------------------------------------------------------------------------------------------------------------
Problem 01. Records’ Count
-------------------------------------------------------------------------------------------------------------------------

SELECT COUNT(Id) AS Count FROM WizzardDeposits

-------------------------------------------------------------------------------------------------------------------------
Problem 02. 02. Longest Magic Wand
-------------------------------------------------------------------------------------------------------------------------

SELECT MAX(MagicWandSize) AS LongestMagicWand FROM WizzardDeposits

-------------------------------------------------------------------------------------------------------------------------
Problem 03. Longest Magic Wand per Deposit Groups
-------------------------------------------------------------------------------------------------------------------------

SELECT DepositGroup, MAX(MagicWandSize) AS LongestMagicWand FROM WizzardDeposits
GROUP BY DepositGroup

-------------------------------------------------------------------------------------------------------------------------
Problem 04. Smallest Deposit Group per Magic Wand Size 
-------------------------------------------------------------------------------------------------------------------------

SELECT TOP 2 DepositGroup FROM WizzardDeposits
GROUP BY DepositGroup
ORDER BY AVG(MagicWandSize)

-------------------------------------------------------------------------------------------------------------------------
Problem 05. Deposits Sum
-------------------------------------------------------------------------------------------------------------------------

SELECT DepositGroup, SUM(DepositAmount) AS TotalSum FROM WizzardDeposits
GROUP BY DepositGroup

-------------------------------------------------------------------------------------------------------------------------
Problem 06. Deposits Sum for Ollivander Family
-------------------------------------------------------------------------------------------------------------------------

SELECT DepositGroup, SUM(DepositAmount) AS TotalSum FROM WizzardDeposits
WHERE MagicWandCreator = 'Ollivander family'
GROUP BY DepositGroup

-------------------------------------------------------------------------------------------------------------------------
Problem 07. Deposits Filter
-------------------------------------------------------------------------------------------------------------------------

SELECT DepositGroup, SUM(DepositAmount) AS TotalSum FROM WizzardDeposits
WHERE MagicWandCreator = 'Ollivander family' 
GROUP BY DepositGroup
HAVING SUM(DepositAmount) < 150000
ORDER BY TotalSum DESC

-------------------------------------------------------------------------------------------------------------------------
Problem 08. Deposit Charge
-------------------------------------------------------------------------------------------------------------------------

SELECT DepositGroup, MagicWandCreator, MIN(DepositCharge) AS MinDepositCharge FROM WizzardDeposits
GROUP BY DepositGroup, MagicWandCreator
ORDER BY MagicWandCreator, DepositGroup

-------------------------------------------------------------------------------------------------------------------------
Problem 09.  Age Groups
-------------------------------------------------------------------------------------------------------------------------

SELECT CASE WHEN Age BETWEEN 0 AND 10 THEN '[0-10]'
WHEN Age BETWEEN 11 AND 20 THEN '[11-20]'
WHEN Age BETWEEN 21 AND 30 THEN '[21-30]'
WHEN Age BETWEEN 31 AND 40 THEN '[31-40]'
WHEN Age BETWEEN 41 AND 50 THEN '[41-50]'
WHEN Age BETWEEN 51 AND 60 THEN '[51-60]'
WHEN Age > 60 THEN '[61+]'
END AS AgeGroup,
COUNT(Age) AS [Count] FROM WizzardDeposits
GROUP BY CASE WHEN Age BETWEEN 0 AND 10 THEN '[0-10]'
WHEN Age BETWEEN 11 AND 20 THEN '[11-20]'
WHEN Age BETWEEN 21 AND 30 THEN '[21-30]'
WHEN Age BETWEEN 31 AND 40 THEN '[31-40]'
WHEN Age BETWEEN 41 AND 50 THEN '[41-50]'
WHEN Age BETWEEN 51 AND 60 THEN '[51-60]'
WHEN Age > 60 THEN '[61+]'
END 

-------------------------------------------------------------------------------------------------------------------------
Problem 10. First Letter
-------------------------------------------------------------------------------------------------------------------------

SELECT DISTINCT LEFT(FirstName, 1) AS FirstLetter FROM WizzardDeposits
WHERE DepositGroup = 'Troll Chest'
ORDER BY FirstLetter

-------------------------------------------------------------------------------------------------------------------------
Problem 11. Average Interest
-------------------------------------------------------------------------------------------------------------------------

SELECT DepositGroup, IsDepositExpired, AVG(DepositInterest) AS AverageInterest FROM WizzardDeposits
WHERE DepositStartDate > '01/01/1985'
GROUP BY IsDepositExpired, DepositGroup
ORDER BY DepositGroup DESC, IsDepositExpired

-------------------------------------------------------------------------------------------------------------------------
Problem 12. Rich Wizard, Poor Wizard
-------------------------------------------------------------------------------------------------------------------------

SELECT
  SUM(ISNULL([current].DepositAmount - [next].DepositAmount, 0)) AS Difference
FROM
   WizzardDeposits AS [current]
LEFT JOIN
   WizzardDeposits AS [next]
      ON [next].Id = (SELECT MIN(Id) FROM WizzardDeposits WHERE Id > [current].Id)

-------------------------------------------------------------------------------------------------------------------------
Problem 13. Departments Total Salaries
-------------------------------------------------------------------------------------------------------------------------

SELECT DepartmentId, SUM(Salary) AS TotalSalary FROM Employees
GROUP BY DepartmentId

-------------------------------------------------------------------------------------------------------------------------
Problem 14. Employees Minimum Salaries
-------------------------------------------------------------------------------------------------------------------------

SELECT DepartmentId, MIN(Salary) AS TotalSalary FROM Employees
WHERE DepartmentID IN (2, 5, 7) AND HireDate > '01/01/2000'
GROUP BY DepartmentId

-------------------------------------------------------------------------------------------------------------------------
Problem 15. Employees Average Salaries
-------------------------------------------------------------------------------------------------------------------------

SELECT * INTO [NewTableEmployees] FROM Employees
WHERE Salary > 30000

DELETE FROM NewTableEmployees
WHERE ManagerID = 42

UPDATE NewTableEmployees
SET Salary = Salary + 5000
WHERE DepartmentID = 1

SELECT DepartmentID, AVG(Salary) AS AverageSalary FROM NewTableEmployees
GROUP BY DepartmentID

-------------------------------------------------------------------------------------------------------------------------
Problem 16. Employees Maximum Salaries
-------------------------------------------------------------------------------------------------------------------------

SELECT DepartmentID, MAX(Salary) AS MaxSalary FROM Employees
GROUP BY DepartmentID
HAVING MAX(Salary) NOT BETWEEN 30000 AND 70000 

-------------------------------------------------------------------------------------------------------------------------
Problem 17. Employees Count Salaries
-------------------------------------------------------------------------------------------------------------------------

SELECT COUNT(*) AS [Count]
FROM  Employees
WHERE ManagerID IS NULL

-------------------------------------------------------------------------------------------------------------------------
Problem 18. 3rd Highest Salary
-------------------------------------------------------------------------------------------------------------------------

SELECT DepartmentID, MAX(Salary) as ThirdHighestSalary 
FROM Employees empl WHERE 2 = 
                      (SELECT COUNT(DISTINCT Salary) FROM Employees 
                        WHERE salary > empl. salary AND DepartmentID = empl.DepartmentID) 
GROUP BY DepartmentID

-------------------------------------------------------------------------------------------------------------------------
Problem 19. Salary Challenge
-------------------------------------------------------------------------------------------------------------------------

SELECT TOP 10 FirstName, LastName, DepartmentID
FROM Employees e
WHERE salary > (SELECT AVG(Salary) from Employees e2 WHERE e2.DepartmentID = e.DepartmentID)